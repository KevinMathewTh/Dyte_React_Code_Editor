{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","open","setOpen","lang","setLanguage","timeout","setTimeout","clearTimeout","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","url","config","method","headers","querystring","api_dev_key","api_option","api_paste_code","axios","then","response","console","log","catch","error","alert","saveData","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4420b479.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\n\r\nexport default function Editor(props) {\r\n  // PROPS\r\n  const { language, displayName, value, onChange } = props;\r\n  /** This is a description of the handleChange function*/\r\n  function handleChange(editor, data, value) {\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    // EDITOR COMPONENT STARTS HERE USING CODEMIRROR\r\n    <div className={\"editor-container\"}>\r\n      <div className=\"editor-title\">Code Editor ({displayName})</div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n    // EDITOR COMPONENT ENDS HERE\r\n  );\r\n}\r\n","// hook to store and access JSON data from localStorage\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// Declare prefix\r\nconst PREFIX = \"DYTE-APP\";\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // create a key with a prefix\r\n  const prefixedKey = PREFIX + key;\r\n  // Get JSON from localStorage\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n    if (jsonValue != null) return JSON.parse(jsonValue);\r\n    if (typeof initialValue === \"function\") {\r\n      return initialValue();\r\n    } else {\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Update localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value), [\r\n      prefixedKey,\r\n      value,\r\n    ]);\r\n  });\r\n  return [value, setValue];\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport querystring from \"querystring\";\nimport axios from \"axios\";\n\nfunction App() {\n  /** This is a description of the saveData function which lets you create a unique link using the PasteBin API */\n  // srcDoc contains the complete html document to be saved and rendered\n  var saveData = () => {\n    var url = \"\";\n    var data = querystring.stringify({\n      // Enter API DEV KEY\n      api_dev_key: \"QTZjAZYi8m9j4gpr5mV1zQOtGVCxAWe-\",\n      api_option: \"paste\",\n      api_paste_code: srcDoc,\n    });\n    var config = {\n      method: \"post\",\n      // Using a CORS-Anywhere proxy server hosted in Heroku\n      url: \"https://fierce-dusk-10679.herokuapp.com/https://pastebin.com/api/api_post.php\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      data: data,\n    };\n\n    // POST Request to CREATE a paste in pastebin and return response url\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        url = JSON.stringify(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    // if url is empty return error\n    if (url === \"\") {\n      url = \"maximum paste in 24h limit reached\";\n    }\n    alert(url);\n  };\n\n  // useLocalStorage to save html,css,js code to local storage .\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n\n  // Declare state variable\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  const [lang, setLanguage] = useState(\"xml\");\n\n  // HotReload feature to reload contents of iframe every 250ms\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n    <html>\n      <body>${html}</body>\n      <style>${css}</style>\n      <script>${js}</script>\n    </html>\n  `);\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  // Main Application Starts\n  return (\n    <>\n      {/* START OF TOP SECTION */}\n      <div className=\"pane top-pane\">\n        {/* FILE EXPLORER STARTS HERE */}\n        <div className={`file-container ${open ? \"\" : \"collapsed\"}`}>\n          <div className=\"editor-title\">\n            File Explorer\n            <button\n              type=\"button\"\n              className=\"file-collapse-btn\"\n              onClick={() => setOpen((prevOpen) => !prevOpen)}\n            >\n              <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n            </button>\n          </div>\n          {/*index.html , index.js, index.css files*/}\n          <button\n            type=\"button\"\n            className=\"html\"\n            onClick={() => setLanguage(\"xml\")}\n          >\n            index.html\n          </button>\n          <button\n            type=\"button\"\n            className=\"css\"\n            onClick={() => setLanguage(\"css\")}\n          >\n            index.css\n          </button>\n          <button\n            type=\"button\"\n            className=\"js\"\n            onClick={() => setLanguage(\"javascript\")}\n          >\n            index.js\n          </button>\n          <button\n            type=\"button\"\n            className=\"save-code\"\n            onClick={() => saveData()}\n          >\n            SAVE CODE\n          </button>\n        </div>\n        {/* FILE EXPLORER ENDS HERE */}\n\n        {/* CODE EDITOR STARTS HERE */}\n        <Editor\n          language={lang}\n          displayName={lang === \"xml\" ? \"HTML\" : lang === \"css\" ? \"CSS\" : \"JS\"}\n          value={lang === \"xml\" ? html : lang === \"css\" ? css : js}\n          onChange={lang === \"xml\" ? setHtml : lang === \"css\" ? setCss : setJs}\n        />\n        {/* CODE EDITOR ENDS HERE */}\n      </div>\n      {/* END FOR TOP SECTION */}\n      {/* LIVE SECTION STARTS HERE */}\n      <div className=\"live-view-title\">Live View</div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n      {/* LIVE SECTION ENDS HERE */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}